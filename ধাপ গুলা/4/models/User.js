/*
//1.2 models/User.js
import mongoose from "mongoose"; // ЁЯСЙ mongoose ржЖржирж▓рж╛ржо

// User Schema ржмрж╛ржирж╛рж▓рж╛ржо
const userSchema = new mongoose.Schema(
  {
    name: {
      type: String, // ЁЯСЙ ржирж╛ржо рж╕рзНржЯрзНрж░рж┐ржВ рж╣ржмрзЗ
      required: true, // ЁЯСЙ ржирж╛ржо ржЕржмрж╢рзНржпржЗ ржжрж┐рждрзЗ рж╣ржмрзЗ
    },
    email: {
      type: String, // ЁЯСЙ ржЗржорзЗржЗрж▓ рж╕рзНржЯрзНрж░рж┐ржВ рж╣ржмрзЗ
      required: true, // ЁЯСЙ ржЕржмрж╢рзНржпржЗ ржжрж┐рждрзЗ рж╣ржмрзЗ
      unique: true, // ЁЯСЙ ржбрзБржкрзНрж▓рж┐ржХрзЗржЯ рж╣ржмрзЗ ржирж╛
    },
  },
  {
    timestamps: true, // ЁЯСЙ createdAt, updatedAt рж╕рзНржмрзЯржВржХрзНрж░рж┐рзЯржнрж╛ржмрзЗ ржпрзЛржЧ рж╣ржмрзЗ
  }
);

// ржоржбрзЗрж▓ ржмрж╛ржирж╛рж▓рж╛ржо
const User = mongoose.model("User", userSchema);

// ржПржХрзНрж╕ржкрзЛрж░рзНржЯ ржХрж░рж▓рж╛ржо
export default User;
*/

// 4.2 models/User.js
import mongoose from "mongoose"; // ЁЯСЙ mongoose ржЗржоржкрзЛрж░рзНржЯ
import bcrypt from "bcryptjs"; // ЁЯСЙ ржкрж╛рж╕ржУрзЯрж╛рж░рзНржб рж╣рзНржпрж╛рж╢рж┐ржВ ржПрж░ ржЬржирзНржп

const userSchema = mongoose.Schema(
  {
    name: {
      type: String,
      required: [true, "ржирж╛ржо ржжрж┐рждрзЗ рж╣ржмрзЗ"], // ЁЯСЙ Name ржмрж╛ржзрзНржпрждрж╛ржорзВрж▓ржХ
    },
    email: {
      type: String,
      required: [true, "ржЗржорзЗрж▓ ржжрж┐рждрзЗ рж╣ржмрзЗ"], // ЁЯСЙ Email ржмрж╛ржзрзНржпрждрж╛ржорзВрж▓ржХ
      unique: true, // ЁЯСЙ Duplicate ржЗржорзЗрж▓ ржЪрж▓ржмрзЗ ржирж╛
    },
    password: {
      type: String,
      required: [true, "ржкрж╛рж╕ржУрзЯрж╛рж░рзНржб ржжрж┐рждрзЗ рж╣ржмрзЗ"], // ЁЯСЙ Password ржмрж╛ржзрзНржпрждрж╛ржорзВрж▓ржХ
    },
  },
  { timestamps: true } // ЁЯСЙ рждрзИрж░рж┐рж░ ржПржмржВ ржЖржкржбрзЗржЯрзЗрж░ рж╕ржорзЯ рж╕рзНржмржпрж╝ржВржХрзНрж░рж┐ржпрж╝
);

// ржкрж╛рж╕ржУрзЯрж╛рж░рзНржб рж╣рзНржпрж╛рж╢ ржХрж░рж╛рж░ ржЬржирзНржп pre-save middleware
userSchema.pre("save", async function (next) {
  if (!this.isModified("password")) {
    next(); // ЁЯСЙ ржпржжрж┐ ржкрж╛рж╕ржУрзЯрж╛рж░рзНржб ржЪрзЗржЗржЮрзНржЬ ржирж╛ рж╣рзЯ, рж╣рзНржпрж╛рж╢ ржХрж░ржмрзЗржирж╛
  }
  const salt = await bcrypt.genSalt(10);
  this.password = await bcrypt.hash(this.password, salt); // ЁЯСЙ ржкрж╛рж╕ржУрзЯрж╛рж░рзНржб рж╣рзНржпрж╛рж╢
});

userSchema.methods.matchPassword = async function (enteredPassword) {
  return await bcrypt.compare(enteredPassword, this.password); // ЁЯСЙ рж▓ржЧржЗржи ржЪрзЗржХ
};

const User = mongoose.model("User", userSchema);

export default User;
